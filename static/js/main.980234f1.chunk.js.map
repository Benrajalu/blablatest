{"version":3,"sources":["views/App.module.scss","domain/search.ts","application/service.ts","views/Results/EmtpyScreens/Loading.tsx","views/Results/EmtpyScreens/Error.tsx","views/Results/EmtpyScreens/NotSearching.tsx","views/Results/EmtpyScreens/NoResults.tsx","views/Results/TripResult/TripResult.tsx","views/Results/TripsList/TripsList.tsx","views/Results/ResultsContainer.tsx","views/App.tsx","reportWebVitals.ts","index.tsx","views/Results/EmtpyScreens/EmptyScreen.module.scss"],"names":["module","exports","trips","payload","pipe","waypoints","trip","vehicle","OptionFP","hasNoResults","search_info","info","count","hasNextPage","next_cursor","fetchTrips","cursor","a","fromCoordinates","lat","lng","toCoordinates","withCursor","APIRoute","fetch","then","result","json","Loading","className","styles","empty","loader","Error","error","message","NotSearching","NoResults","data-testid","TripResult","duration_in_seconds","distance_in_meters","price","amount","currency","Search","make","model","NonEmptyArrayFP","length","href","link","target","rel","TripsList","props","useState","collectedTrips","setTrips","showLoadMore","setLoadMore","currentCursor","setCursor","isLoading","setIsLoading","ArrayFP","index","type","onClick","ResultsContainer","RemoteData","results","setResults","useEffect","App","app","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.980234f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3xquF\"};","import { pipe } from \"fp-ts/lib/pipeable\";\nimport * as OptionFP from 'fp-ts/Option';\n\ntype Vehicle = {\n  make: string;\n  model: string;\n}\n\ntype Place = {\n  address: string;\n  city: string;\n  country_code: string;\n  latitude: number;\n  longitude: number;\n}\n\ntype Waypoint = {\n  date_time: Date;\n  place: Place;\n}\n\nexport type Trip = {\n  link: string;\n  distance_in_meters: number;\n  duration_in_seconds: number;\n  price: { amount: string, currency: string; };\n  vehicle?: Vehicle;\n  waypoints: Waypoint[];\n}\n\nexport type Trips = Trip[];\n\nexport type Waypoints = Waypoint[];\n\nexport type TripsQueryPayload = {\n  link: string;\n  search_info: {\n    count: number;\n    full_trip_count: number;\n  };\n  trips: Trips;\n  next_cursor?: string;\n}\n\n// Accessors \n// Enable easy refectoring while keeping the same public interface\nexport function trips(payload: TripsQueryPayload): Trips {\n  return pipe(\n    payload.trips,\n  );\n}\n\nexport function waypoints(trip: Trip): Waypoints {\n  return pipe(\n    trip.waypoints,\n  );\n}\n\nexport function vehicle(trip: Trip): OptionFP.Option<Vehicle> {\n  return pipe(\n    trip.vehicle,\n    OptionFP.fromNullable,\n  );\n}\n\nexport function hasNoResults(payload: TripsQueryPayload) {\n  return pipe(\n    payload.search_info,\n    (info) => info.count === 0,\n  );\n}\n\nexport function hasNextPage(payload: TripsQueryPayload) {\n  return pipe(\n    payload.next_cursor\n  );\n}","import { TripsQueryPayload } from \"../domain/search\";\n\ntype destinationCoordinates = {\n  lat: number;\n  lng: number;\n}\n\nexport async function fetchTrips(cursor?:string):Promise<TripsQueryPayload> {\n  const apiKey = 'YzbiA8L6DcqxTvSna1lOFQQU66FosDVs';\n  const fromCoordinates:destinationCoordinates = { lat: 48.8566, lng: 2.3522 };\n  const toCoordinates :destinationCoordinates = { lat: 45.764043, lng: 4.835659 };\n  //const date = new Date().toISOString();\n  const date = '2021-02-16T06:00:00';\n  const withCursor = cursor ? `&from_cursor=${cursor}` : '';\n\n  const APIRoute = `https://public-api.blablacar.com/api/v3/trips?key=${apiKey}&from_coordinate=${fromCoordinates.lat}%2C${fromCoordinates.lng}&from_country=FR&to_coordinate=${toCoordinates.lat}%2C${toCoordinates.lng}&to_country=GB&locale=fr-FR&currency=EUR&start_date_local=${date}${withCursor}`\n\n  return fetch(APIRoute)\n    .then(result => result.json())\n}","import React from 'react';\n\nimport styles from './EmptyScreen.module.scss';\n\n\nexport default function Loading() {\n  return (\n    <article className={styles.empty}>\n      <div className={styles.loader} />\n      <p>loading your results...</p>\n    </article>\n  )\n}","import React from 'react';\n\nimport styles from './EmptyScreen.module.scss';\n\n\nexport default function Error({error}: {error: Error}) {\n  return (\n    <article className={styles.empty}>\n      <h2>Oups, something is wrong</h2>\n      <p>Please retry!</p>\n      <p>{error.message}</p>\n    </article>\n  )\n}","import React from 'react';\n\nimport styles from './EmptyScreen.module.scss';\n\n\nexport default function NotSearching() {\n  return (\n    <article className={styles.empty}>\n      <h2>Ready to go?</h2>\n      <p>Please select your location and destination</p>\n    </article>\n  )\n}","import React from 'react';\n\nimport styles from './EmptyScreen.module.scss';\n\n\nexport default function NoResults() {\n  return (\n    <article className={styles.empty} data-testid=\"no-results\">\n      <h2>Sorry, we have not found any trip for with the requested options...</h2>\n    </article>\n  )\n}","import React from 'react';\nimport { pipe } from 'fp-ts/function';\nimport * as NonEmptyArrayFP from 'fp-ts/NonEmptyArray';\nimport * as OptionFP from 'fp-ts/Option';\nimport * as Search from '../../../domain/search';\n\n\nexport default function TripResult({ trip }: { trip:Search.Trip }) {\n  return (\n    <article>\n      <p>You'll reach you destination in {trip.duration_in_seconds / 60 } minutes&nbsp;\n          <span>({trip.distance_in_meters / 1000}km)</span>\n      </p>\n      <p>It would cost you {trip.price.amount}{trip.price.currency}</p>\n\n      {\n        pipe(\n          trip,\n          Search.vehicle,\n          OptionFP.fold(\n            () => null,\n            (vehicle) => <p>You would be riding a sweet {vehicle.make} {vehicle.model}</p>,\n          )\n        )\n      }\n\n      {\n        pipe(\n          trip,\n          Search.waypoints,\n          NonEmptyArrayFP.fromArray,\n          OptionFP.fold(\n            () => <p>This is a direct trip</p>,\n            (waypoints) => <p>This trip has {waypoints.length} waypoints</p>,\n          )\n        )\n      }\n\n      <a href={trip.link} target=\"_blank\" rel=\"noreferrer\">Interested? Check the details on Blablacar!</a>\n    </article>\n  )  \n}","import React, { useState } from 'react';\nimport * as ArrayFP from 'fp-ts/Array';\nimport { pipe } from 'fp-ts/function';\nimport * as Search from '../../../domain/search';\nimport { fetchTrips } from '../../../application/service';\nimport TripResult from '../TripResult/TripResult';\n\ntype TripsListTypes = {\n  trips: Search.Trips;\n  hasNextPage?: string;\n}\n\nexport default function TripsList(props: TripsListTypes) {\n  const [collectedTrips, setTrips] = useState(props.trips);\n  const [showLoadMore, setLoadMore] = useState(!!props.hasNextPage);\n  const [currentCursor, setCursor] = useState(props.hasNextPage);\n  const [isLoading, setIsLoading] = useState(false);\n  \n  function handleClick() {\n    setIsLoading(true);\n\n    fetchTrips(currentCursor)\n      .then(result => {\n        setLoadMore(!!result.next_cursor);\n        setCursor(result.next_cursor);\n        setTrips([...collectedTrips, ...result.trips]);\n        setIsLoading(false);\n      })\n  }\n\n  return (\n    <div>\n      <p>Results</p>\n      <h1>Available trips from <strong>Paris</strong> to <strong>Lyon</strong></h1>\n\n      <ul>\n        {\n          pipe(\n            collectedTrips,\n            ArrayFP.mapWithIndex(( index:number, trip: Search.Trip ) => (\n              <li key={`${trip.distance_in_meters}-${index}`}>\n                <TripResult trip={trip} />\n              </li>\n            ))\n          )\n        }\n      </ul>\n\n      {showLoadMore && !isLoading && <button type='button' onClick={handleClick}>Load more</button>}\n      {isLoading && <p>Loading...</p>}\n    </div>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport * as RemoteData from '@devexperts/remote-data-ts';\nimport { pipe } from 'fp-ts/function';\n\nimport * as Search from '../../domain/search';\nimport { fetchTrips } from '../../application/service';\n\nimport Loading from './EmtpyScreens/Loading';\nimport Error from './EmtpyScreens/Error';\nimport NotSearching from './EmtpyScreens/NotSearching';\nimport NoResults from './EmtpyScreens/NoResults';\nimport TripsList from './TripsList/TripsList';\n\nexport default function ResultsContainer() {\n  const [results, setResults] = useState<RemoteData.RemoteData<Error, Search.TripsQueryPayload>>(RemoteData.initial);\n\n  useEffect(() => {\n    setResults(RemoteData.pending);\n\n    fetchTrips()\n      .then((payload: Search.TripsQueryPayload) => setResults(RemoteData.success(payload)))\n\n  }, [setResults]);\n\n  return (\n    <>\n      {\n        pipe(\n          results,\n          RemoteData.fold(\n            () => <NotSearching />,\n            () => <Loading />,\n            (error) => <Error error={error} />,\n            (payload) => (\n              <>\n                { Search.hasNoResults(payload) && <NoResults /> }\n                { !Search.hasNoResults(payload) && (\n                  <TripsList\n                    trips={Search.trips(payload)}\n                    hasNextPage={Search.hasNextPage(payload)}\n                  />\n                )}\n              </>\n            ),\n          )\n        )\n      }\n    </>\n  )\n}","import React from 'react';\n\nimport styles from './App.module.scss';\n\nimport ResultsContainer from './Results/ResultsContainer';\n\nfunction App() {\n  return (\n    <div className={styles.app}>\n      <ResultsContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './views/globalStyles/index.scss';\nimport App from './views/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"empty\":\"EmptyScreen_empty__1K1DJ\",\"loader\":\"EmptyScreen_loader__bOrnw\"};"],"sourceRoot":""}